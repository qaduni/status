# Generated by Django 5.2.4 on 2025-07-21 19:58

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StatusCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('online', 'Online'), ('offline', 'Offline'), ('slow', 'Slow'), ('error', 'Error')], max_length=10)),
                ('status_code', models.PositiveIntegerField(blank=True, help_text='HTTP status code', null=True)),
                ('response_time', models.PositiveIntegerField(blank=True, help_text='Response time in milliseconds', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if check failed', null=True)),
                ('checked_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-checked_at'],
            },
        ),
        migrations.CreateModel(
            name='UptimeAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('down', 'Website Down'), ('slow', 'Slow Response'), ('up', 'Website Back Up')], max_length=10)),
                ('threshold', models.PositiveIntegerField(help_text='Threshold value (e.g., response time in ms)')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='AlertNotification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('status_check', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.statuscheck')),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='monitoring.uptimealert')),
            ],
            options={
                'ordering': ['-sent_at'],
            },
        ),
        migrations.CreateModel(
            name='Website',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Display name for the website', max_length=255)),
                ('url', models.URLField(help_text='URL to monitor', validators=[django.core.validators.URLValidator()])),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('deleted', 'Deleted')], default='active', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('check_interval', models.PositiveIntegerField(default=60, help_text='Check interval in seconds')),
                ('timeout', models.PositiveIntegerField(default=10, help_text='Request timeout in seconds')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='websites', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'url')},
            },
        ),
        migrations.AddField(
            model_name='uptimealert',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='monitoring.website'),
        ),
        migrations.AddField(
            model_name='statuscheck',
            name='website',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_checks', to='monitoring.website'),
        ),
        migrations.AlterUniqueTogether(
            name='uptimealert',
            unique_together={('website', 'alert_type')},
        ),
        migrations.AddIndex(
            model_name='statuscheck',
            index=models.Index(fields=['website', '-checked_at'], name='monitoring__website_2a4f45_idx'),
        ),
        migrations.AddIndex(
            model_name='statuscheck',
            index=models.Index(fields=['status', '-checked_at'], name='monitoring__status_50666c_idx'),
        ),
    ]
